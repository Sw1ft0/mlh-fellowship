# Maps ip address to $limit variable if request is of type POST
map $request_method $limit {
	default         "";
	POST            $binary_remote_addr;
}

# Creates 10mb zone in memory for storing binary ips
limit_req_zone $limit zone=timeline_post_limit:10m rate=1r/m;

server {
	listen 80;
	server_name kpavlo.duckdns.org;

	if ($host = kpavlo.duckdns.org) {
		return 301 https://$host$request_uri;
	}
}

server {
	listen 443 ssl;
	server_name kpavlo.duckdns.org;

	location = /api/timeline_post {	
		# Apply rate limit 
		limit_req zone=timeline_post_limit nodelay;
		limit_req_status 429;

       	proxy_pass http://myportfolio:5000/api/timeline_post;
       	proxy_set_header Host $host;
       	proxy_set_header X-Real-IP $remote_addr;
       	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
       	proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Handle other locations
	location / {
        	proxy_pass http://myportfolio:5000/;
         	proxy_set_header Host $host;
         	proxy_set_header X-Real-IP $remote_addr;
         	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         	proxy_set_header X-Forwarded-Proto $scheme;
	}
	
	# Load the certificate files.
	ssl_certificate /etc/letsencrypt/live/kpavlo.duckdns.org/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/kpavlo.duckdns.org/privkey.pem;
	ssl_trusted_certificate /etc/letsencrypt/live/kpavlo.duckdns.org/chain.pem;

}
